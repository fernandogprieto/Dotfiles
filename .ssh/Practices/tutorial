#My best practices for shh begginer to expert
sudo apt-get install openssh-server
ssh-keygen 
#Pub and private ... pub for AWS, GPC, Azure ...

ssh root@172.235.21.21 
#yes 
#if you want to save the certificate
#You can create 
.ssh/authorized_keys

ssh-copy-id
ssh -t user@ip <command> #emulate the command into the server
ssh -D <port> user@ip    #uses proxy in the browser proxy socks to localhots and port 
ssh -X user@ip           #execute programms the server in your workstations with https://xquartz.org
ssh -L <port>:<ip>:22 user@ip #excelente to create a vpn tunnel for firewalls 
ssh -p <port> user@ip #You can enter trought the port created in the command ssh -L
ssh -R <port>:localhost:22 user@ip #You can use to users with uses restricts ip, so you create a tunnel
                                   #since you sever to user similar to pulsesecure

#You can create
~.ssh/config 
StrickHostKeyChecking no
XAuthLocation /opt/X11/bin/xauth
FowardAgent Yes

Host Server 1
Hostname 201.201.201.201
    User root

Host rpi #only go into the server for example ssh rpi ls execute the command and show in tty
Hostname 192.192.196.18
    User kbs
    LocalForward <port> 127.0.0.1:631

scp < rsync 
rsync --partial --progress --rsh=ssh Desktop/docker.yml server1:docker.yml #The best option for
#copy files

eval ssh-agent 
ssh-add ~.ssh/id_rsa
ssh -l #show to list of keys
ssh -t server1 ssh user@ip #-t open terminal because we don't have the user@ip in .ssh/config

ssh -J server1 server2 #Open localforwarding with -J Jump using keys ssh.config
ssh -j server1,server2 linux #Jump to linux localforwarding
~C #interpreter or performer helps a lot for set up localforwarding

#SSHFS (SSH File System) is a client for mounting a file system located on 
#a remote machine onto your local system through an SSH connection. 
 sshfs user@ip:/home/user /mnt/rp2
 
 #you can use vim for edit files
vim scp://rpi/docker.yml #docker.yml is in home directory
